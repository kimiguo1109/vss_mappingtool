#
# (C) 2018 Volvo Cars
# (C) 2016 Jaguar Land Rover
#
# All files and artifacts in this repository are licensed under the
# provisions of the license provided by the LICENSE file in this repository.
#

#
# Chassis signals and attributes
#

Wheelbase:
  datatype: uint16
  type: attribute
  default: 0
  unit: mm
  description: Overall wheel base, in mm.

Track:
  datatype: uint16
  type: attribute
  default: 0
  unit: mm
  description: Overall wheel tracking, in mm.

#
# Axle definition
#
Axle:
  instances:
    - Row[1,2]
  type: branch
  description: Axle signals

AxleCount:
  datatype: uint8
  type: attribute
  default: 2
  description: Number of axles on the vehicle


#
# Axle attributes
#
Axle.WheelCount:
  datatype: uint8
  type: attribute
  description: Number of wheels on the axle

Axle.WheelDiameter:
  datatype: float
  type: attribute
  unit: inch
  description: Diameter of wheels (rims without tires), in inches, as per ETRTO / TRA standard.

Axle.WheelWidth:
  datatype: float
  type: attribute
  unit: inch
  description: Width of wheels (rims without tires), in inches, as per ETRTO / TRA standard.

Axle.SteeringAngle:
  datatype: float
  type: sensor
  unit: degrees
  description: Single track two-axle model steering angle.
               Angle according to ISO 8855. Positive = degrees to the left. Negative = degrees to the right.
  comment: Single track two-axle model steering angle refers to the angle that a centrally mounted wheel would have.
#
# Tire attributes
#
# Tire size can be specified by different systems
# The VSS signals are intended to support both ISO metric tire code and flotation/numeric sizes.
# Note that tires typically specify either tire diameter or aspect ratio, but both are included in VSS
# for convenience, and it is possible for a vehicle to present both attributes as they can be calculated from each other.
# Axle.TireDiameter = Axle.WheelDiameter + ((2 * Axle.TireWidth * Axle.TireAspectRatio) /(100*25.4))

Axle.TireDiameter:
  datatype: float
  type: attribute
  unit: inch
  description: Outer diameter of tires, in inches, as per ETRTO / TRA standard.

Axle.TireWidth:
  datatype: uint16
  type: attribute
  unit: mm
  description: Nominal section width of tires, in mm, as per ETRTO / TRA standard.

Axle.TireAspectRatio:
  datatype: uint8
  type: attribute
  unit: percent
  description: Aspect ratio between tire section height and tire section width, as per ETRTO / TRA standard.

#
# Wheels on Axles
#
Axle.Wheel:
  instances: ["Left","Right"]
  type: branch
  description: Wheel signals for axle

#include Wheel.vspec Axle.Wheel

#
# Parking Brake
#
ParkingBrake:
  type: branch
  description: Parking brake signals

ParkingBrake.IsEngaged:
  datatype: boolean
  type: actuator
  description: Parking brake status. True = Parking Brake is Engaged. False = Parking Brake is not Engaged.


#
# Steering Wheel
#
SteeringWheel:
  type: branch
  description: Steering wheel signals

SteeringWheel.Angle:
  datatype: int16
  type: sensor
  unit: degrees
  description: Steering wheel angle. Positive = degrees to the left. Negative = degrees to the right.

SteeringWheel.Tilt:
  datatype: uint8
  type: actuator
  min: 0
  max: 100
  unit: percent
  description: Steering wheel column tilt. 0 = Lowest position. 100 = Highest position.

SteeringWheel.Extension:
  datatype: uint8
  type: actuator
  min: 0
  max: 100
  unit: percent
  description: Steering wheel column extension from dashboard. 0 = Closest to dashboard. 100 = Furthest from dashboard.

SteeringWheel.Position:
  datatype: string
  type: attribute
  default: 'FRONT_LEFT'
  allowed: ['FRONT_LEFT', 'FRONT_RIGHT']
  description: Position of the steering wheel on the left or right side of the vehicle.

#
# Accelerator
#
Accelerator:
  type: branch
  description: Accelerator signals

Accelerator.PedalPosition:
  datatype: uint8
  type: sensor
  min: 0
  max: 100
  unit: percent
  description: Accelerator pedal position as percent. 0 = Not depressed. 100 = Fully depressed.


#
# Brake
#
Brake:
  type: branch
  description: Brake system signals

Brake.PedalPosition:
  datatype: uint8
  type: sensor
  min: 0
  max: 100
  unit: percent
  description: Brake pedal position as percent. 0 = Not depressed. 100 = Fully depressed.

Brake.IsDriverEmergencyBrakingDetected:
  datatype: boolean
  type: sensor
  description: Indicates if emergency braking initiated by driver is detected.
               True = Emergency braking detected. False = Emergency braking not detected.
  comment: Detection of emergency braking can trigger Emergency Brake Assist (EBA) to engage.
  

